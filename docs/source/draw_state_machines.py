"""
This module draws diagrams of the state machines.

Usage:
    ~/ska-src/ska-tango-base$ docker run --rm -ti -v $PWD:/app continuumio/miniconda3 bash

    (base) root@293f3b699c9b:#
    $ conda install --yes pygraphviz
    $ pip install transitions
    $ apt-get update && apt-get install gsfonts
    $ cd /app/docs/source
    $ python draw_state_machines.py

(Or see the top level Makefile)

"""
import importlib
import sys

from unittest import mock
from transitions.extensions import GraphMachine

# local import, so we can run this without installing the whole package
sys.path.append("../../src/ska_tango_base")
import state_machine
import csp_subelement_state_machine


def patch_in_graph_machine():
    with mock.patch("transitions.extensions.LockedMachine", GraphMachine):
        mod = sys.modules["state_machine"]
        importlib.reload(mod)
        mod = sys.modules["csp_subelement_state_machine"]
        importlib.reload(mod)


def draw(machine_class):
    machine_name = machine_class.__name__
    graphing_options = {
        "title": f"\n{machine_name}",
        "show_conditions": True,
        "show_state_attributes": True,
        "show_auto_transitions": False,
    }
    machine = machine_class(None, **graphing_options)
    machine.get_graph().draw(f"images/{machine_name}_autogenerated.png", prog='dot')


if __name__ == "__main__":
    patch_in_graph_machine()
    draw(state_machine.OperationStateMachine)
    draw(state_machine.AdminModeStateMachine)
    draw(state_machine.ObservationStateMachine)
    draw(csp_subelement_state_machine.CspSubElementObsDeviceStateMachine)
